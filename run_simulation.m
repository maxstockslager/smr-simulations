clear all, close all

addpath('helper_functions')
addpath('peak_libraries')

%% generate simulated peaks
SIM_PARAMS = struct(...
    'transit_time_vector', logspace(log10(1/1000), log10(100/1000), 100), ...
    'true_height', 5, ...
    'datarate', 12500, ...
    'noise_sd', 0.25, ...
    'bandwidth', 200, ...
    'order', 1, ...
    'channel_length', 0.965, ...
    'mode', 2, ...
    'n_replicates', 100 ...
);

fprintf('Generating simulated blurred peaks...\n')
peak_params = sim_params_to_peak_params(SIM_PARAMS);
peak_list = peak_params_to_peak_list(peak_params);

fprintf('Loading in peak library...\n');
PEAK_LIBRARY_FILE = 'peakshapes 200Hzbw 0.965length 1 - 0.1 - 500ms.csv';
[library, transit_time_digits] = read_peak_library(PEAK_LIBRARY_FILE);

%% deblur
OPTIM_SETTINGS = struct(...
    'transit_time_search_factor', 0.75, ...
    'delay_search_factor', 1, ...
    'peak_amplitude_lower_bound', 0.5, ...
    'peak_amplitude_upper_bound', 1, ...
    'transit_time_digits', transit_time_digits ...
);

USE_PARFOR = true;
peak_fits = deblur_peaks(peak_list, library, OPTIM_SETTINGS, USE_PARFOR); % separate struct for each fit

%% quality control
QC_SETTINGS = struct(...
    'vert_optim_score_reject_sd', 3, ...
    'horiz_optim_score_reject_sd', 3, ...
    'sd_outlier_percent', 1 ...
);

results = extract_structure_data(peak_fits); % group parameters into vectors
[results_filt, accepted_peak_numbers, QC_SETTINGS] = quality_control(results, QC_SETTINGS);

%% plots
plot_results(results, results_filt, QC_SETTINGS)

%% export summary
output_table = format_output_table(peak_params, peak_fits, accepted_peak_numbers);
writetable(output_table, strcat('simulations/', date, '-', datestr(now,'HH-MM-SS'), '.csv'))
