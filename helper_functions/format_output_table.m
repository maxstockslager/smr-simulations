function output_table = format_output_table(peak_params, peak_fits, accepted_peak_numbers)

old_peak_params_names = {...
    'datarate', ...
    'transit_time', ...
    'noise_sd', ...
    'true_height', ...
    'bandwidth', ...
    'order', ...
    'channel_length', ...
    'mode'};
new_peak_params_names = {...
    'sim_datarate', ...
    'sim_transit_time', ...
    'sim_noise_sd', ...
    'sim_true_height', ...
    'sim_bandwidth', ...
    'sim_order', ...
    'sim_channel_length', ...
    'sim_mode'};

old_peak_fits_names = {...
    'amplitude', ...
    'transit_time', ...
    'delay', ...
    'attenuation', ...
    'height', ...
    'vert_optim_score', ...
    'horiz_optim_score' ...
};

new_peak_fits_names = {...
    'fit_amplitude', ...
    'fit_transit_time', ...
    'fit_delay', ...
    'fit_attenuation', ...
    'fit_height', ...
    'fit_vert_optim_score', ...
    'fit_horiz_optim_score' ...
};

peak_params_output = rename_struct_fields(peak_params, old_peak_params_names, new_peak_params_names);
peak_fits_output = rename_struct_fields(peak_fits, old_peak_fits_names, new_peak_fits_names);
accepted_peak_mask = zeros(length(peak_params), 1); accepted_peak_mask(accepted_peak_numbers) = 1;

output_struct = catstruct(peak_params_output, peak_fits_output);
for ii = 1:length(output_struct)
    output_struct(ii).peak_accepted = accepted_peak_mask(ii);
end
output_table = struct2table(output_struct);
end